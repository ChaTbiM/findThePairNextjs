{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chatb\\\\Desktop\\\\Code\\\\nextJS\\\\find-the-pair\\\\components\\\\Grid.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { LIMIT_CARDS, SHUFFLE, DUPLICATE_CARDS, RESET_CARDS } from \"../redux/constants/action-types\";\n\nfunction Grid(props) {\n  _s();\n\n  var _this = this;\n\n  useEffect(function () {\n    props.shuffleCards();\n    props.limitCards();\n    props.duplicateCards();\n  }, [props.numberOfPairs]);\n  return (//   grid Item\n    __jsx(\"gridContainer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }, props.cards.map(function (el, index) {\n      return __jsx(\"img\", {\n        key: el.src + index,\n        width: \"125\",\n        height: \"125\",\n        src: el.src,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      });\n    }))\n  );\n}\n\n_s(Grid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Grid;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    numberOfPairs: state.numberOfPairs,\n    cards: state.cards\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    shuffleCards: function shuffleCards() {\n      return dispatch({\n        type: SHUFFLE\n      });\n    },\n    limitCards: function limitCards() {\n      return dispatch({\n        type: LIMIT_CARDS\n      });\n    },\n    duplicateCards: function duplicateCards() {\n      return dispatch({\n        type: DUPLICATE_CARDS\n      });\n    },\n    resetCards: function resetCards() {\n      return dispatch({\n        type: RESET_CARDS\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid); // ---------------------------------\n\nvar gridContainer = styled.div.withConfig({\n  displayName: \"Grid__gridContainer\",\n  componentId: \"v3z7jl-0\"\n})([\"width:520px;height:520px;margin:5px auto;\"]);\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Users/chatb/Desktop/Code/nextJS/find-the-pair/components/Grid.jsx"],"names":["React","useEffect","connect","styled","LIMIT_CARDS","SHUFFLE","DUPLICATE_CARDS","RESET_CARDS","Grid","props","shuffleCards","limitCards","duplicateCards","numberOfPairs","cards","map","el","index","src","mapStateToProps","state","mapDispatchToProps","dispatch","type","resetCards","gridContainer","div"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,WADF,EAEEC,OAFF,EAGEC,eAHF,EAIEC,WAJF,QAKO,iCALP;;AAMA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA;;AACnBR,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,KAAK,CAACC,YAAN;AACAD,IAAAA,KAAK,CAACE,UAAN;AACAF,IAAAA,KAAK,CAACG,cAAN;AACD,GAJQ,EAIN,CAACH,KAAK,CAACI,aAAP,CAJM,CAAT;AAMA,SACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgB,UAACC,EAAD,EAAKC,KAAL,EAAe;AAC9B,aACE;AAAK,QAAA,GAAG,EAAED,EAAE,CAACE,GAAH,GAASD,KAAnB;AAA0B,QAAA,KAAK,EAAC,KAAhC;AAAsC,QAAA,MAAM,EAAC,KAA7C;AAAmD,QAAA,GAAG,EAAED,EAAE,CAACE,GAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJA,CADH;AAFF;AAUD;;GAjBQV,I;;KAAAA,I;;AAmBT,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCP,IAAAA,aAAa,EAAEO,KAAK,CAACP,aADa;AAElCC,IAAAA,KAAK,EAAEM,KAAK,CAACN;AAFqB,GAAZ;AAAA,CAAxB;;AAKA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACxCZ,IAAAA,YAAY,EAAE;AAAA,aAAMY,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAElB;AAAR,OAAD,CAAd;AAAA,KAD0B;AAExCM,IAAAA,UAAU,EAAE;AAAA,aAAMW,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEnB;AAAR,OAAD,CAAd;AAAA,KAF4B;AAGxCQ,IAAAA,cAAc,EAAE;AAAA,aAAMU,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEjB;AAAR,OAAD,CAAd;AAAA,KAHwB;AAIxCkB,IAAAA,UAAU,EAAE;AAAA,aAAMF,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEhB;AAAR,OAAD,CAAd;AAAA;AAJ4B,GAAf;AAAA,CAA3B;;AAOA,eAAeL,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,IAA7C,CAAf,C,CAEA;;AACA,IAAMiB,aAAa,GAAGtB,MAAM,CAACuB,GAAV;AAAA;AAAA;AAAA,iDAAnB","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  LIMIT_CARDS,\r\n  SHUFFLE,\r\n  DUPLICATE_CARDS,\r\n  RESET_CARDS,\r\n} from \"../redux/constants/action-types\";\r\nfunction Grid(props) {\r\n  useEffect(() => {\r\n    props.shuffleCards();\r\n    props.limitCards();\r\n    props.duplicateCards();\r\n  }, [props.numberOfPairs]);\r\n\r\n  return (\r\n    //   grid Item\r\n    <gridContainer>\r\n      {props.cards.map((el, index) => {\r\n        return (\r\n          <img key={el.src + index} width=\"125\" height=\"125\" src={el.src} />\r\n        );\r\n      })}\r\n    </gridContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  numberOfPairs: state.numberOfPairs,\r\n  cards: state.cards,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  shuffleCards: () => dispatch({ type: SHUFFLE }),\r\n  limitCards: () => dispatch({ type: LIMIT_CARDS }),\r\n  duplicateCards: () => dispatch({ type: DUPLICATE_CARDS }),\r\n  resetCards: () => dispatch({ type: RESET_CARDS }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);\r\n\r\n// ---------------------------------\r\nconst gridContainer = styled.div`\r\n  width: 520px;\r\n  height: 520px;\r\n  margin: 5px auto;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}