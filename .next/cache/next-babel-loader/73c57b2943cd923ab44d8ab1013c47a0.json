{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chatb\\\\Desktop\\\\Code\\\\nextJS\\\\find-the-pair\\\\components\\\\Grid.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction Grid(props) {\n  _s();\n\n  var _this = this;\n\n  //  mount\n  //   useEffect(() => {\n  //     console.log(\"Component did mount\");\n  //   }, []);\n  //   mount + update\n  useEffect(function () {\n    // shuffle\n    // limit to numberOfPairs\n    // mirror\n    // Shuflle\n    console.log(props.numberOfPairs);\n  }, [props.numberOfPairs, width]);\n  return (//   grid Item\n    __jsx(React.Fragment, null, props.cards.map(function (el, index) {\n      if (el.isActive) {\n        return __jsx(\"img\", {\n          key: el.src + index,\n          src: el.src,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 18\n          }\n        });\n      }\n    }))\n  );\n}\n\n_s(Grid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Grid;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    numberOfPairs: state.numberOfPairs,\n    cards: state.cards\n  };\n};\n\nexport default connect(mapStateToProps)(Grid);\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Users/chatb/Desktop/Code/nextJS/find-the-pair/components/Grid.jsx"],"names":["React","useEffect","connect","Grid","props","console","log","numberOfPairs","width","cards","map","el","index","isActive","src","mapStateToProps","state"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA;;AACnB;AACA;AACA;AACA;AAEA;AACAH,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA;AACA;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAlB;AACD,GANQ,EAMN,CAACH,KAAK,CAACG,aAAP,EAAsBC,KAAtB,CANM,CAAT;AAQA,SACE;AACA,gCACGJ,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgB,UAACC,EAAD,EAAKC,KAAL,EAAe;AAC9B,UAAID,EAAE,CAACE,QAAP,EAAiB;AACf,eAAO;AAAK,UAAA,GAAG,EAAEF,EAAE,CAACG,GAAH,GAASF,KAAnB;AAA0B,UAAA,GAAG,EAAED,EAAE,CAACG,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAJA,CADH;AAFF;AAUD;;GAzBQX,I;;KAAAA,I;;AA2BT,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCT,IAAAA,aAAa,EAAES,KAAK,CAACT,aADa;AAElCE,IAAAA,KAAK,EAAEO,KAAK,CAACP;AAFqB,GAAZ;AAAA,CAAxB;;AAKA,eAAeP,OAAO,CAACa,eAAD,CAAP,CAAyBZ,IAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Grid(props) {\r\n  //  mount\r\n  //   useEffect(() => {\r\n  //     console.log(\"Component did mount\");\r\n  //   }, []);\r\n\r\n  //   mount + update\r\n  useEffect(() => {\r\n    // shuffle\r\n    // limit to numberOfPairs\r\n    // mirror\r\n    // Shuflle\r\n    console.log(props.numberOfPairs);\r\n  }, [props.numberOfPairs, width]);\r\n\r\n  return (\r\n    //   grid Item\r\n    <>\r\n      {props.cards.map((el, index) => {\r\n        if (el.isActive) {\r\n          return <img key={el.src + index} src={el.src} />;\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  numberOfPairs: state.numberOfPairs,\r\n  cards: state.cards,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Grid);\r\n"]},"metadata":{},"sourceType":"module"}